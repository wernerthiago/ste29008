Membro arquivo incluído por causa de arquivo (símbolo)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              ./Uart.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              ./Uart.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
                              ./Uart.o (__do_global_ctors)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
                              ./Uart.o (__do_global_dtors)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o) (__tablejump__)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                              ./main.o (free)

Alocando simbolos comuns
Tamanho comum do arquivo de símbolos

__brkval            0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__flp               0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

Seções de entrada descartadas

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .group         0x0000000000000000        0x8 ./Uart.o
 .text          0x0000000000000000        0x0 ./Uart.o
 .bss           0x0000000000000000        0x0 ./Uart.o
 .text._ZN4Uart12interruptoffEv
                0x0000000000000000       0x10 ./Uart.o
 .text          0x0000000000000000        0x0 ./main.o
 .bss           0x0000000000000000        0x0 ./main.o
 .text._Z5delayv
                0x0000000000000000       0x56 ./main.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

Configuração de Memória

Nome             Origem             Tamanho            Atributos
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Script do link-editor e mapa de memória

Endereço da seção .data ajustado para 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
LOAD ./Uart.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x7b4
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
 .ctors         0x0000000000000068        0x2 ./Uart.o
                0x000000000000006a                __ctors_end = .
                0x000000000000006a                __dtors_start = .
 *(.dtors)
 .dtors         0x000000000000006a        0x2 ./Uart.o
                0x000000000000006c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000006c        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x000000000000006c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000006c        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000078       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000078                __do_copy_data
 .init4         0x000000000000008e       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 .init6         0x000000000000009e       0x14 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
                0x000000000000009e                __do_global_ctors
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000b2        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b6        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000b6                __vector_22
                0x00000000000000b6                __vector_1
                0x00000000000000b6                __vector_24
                0x00000000000000b6                __vector_12
                0x00000000000000b6                __bad_interrupt
                0x00000000000000b6                __vector_6
                0x00000000000000b6                __vector_3
                0x00000000000000b6                __vector_23
                0x00000000000000b6                __vector_25
                0x00000000000000b6                __vector_11
                0x00000000000000b6                __vector_13
                0x00000000000000b6                __vector_17
                0x00000000000000b6                __vector_7
                0x00000000000000b6                __vector_5
                0x00000000000000b6                __vector_4
                0x00000000000000b6                __vector_9
                0x00000000000000b6                __vector_2
                0x00000000000000b6                __vector_21
                0x00000000000000b6                __vector_15
                0x00000000000000b6                __vector_8
                0x00000000000000b6                __vector_14
                0x00000000000000b6                __vector_10
                0x00000000000000b6                __vector_16
                0x00000000000000b6                __vector_20
                0x00000000000000b8                . = ALIGN (0x2)
 *(.text.*)
 .text._ZN4UartC2Ev
                0x00000000000000b8       0x6a ./Uart.o
                0x00000000000000b8                _ZN4UartC2Ev
                0x00000000000000b8                _ZN4UartC1Ev
 .text._ZN4Uart3putEh
                0x0000000000000122       0x38 ./Uart.o
                0x0000000000000122                _ZN4Uart3putEh
 .text._ZN4Uart3getEv
                0x000000000000015a       0x1e ./Uart.o
                0x000000000000015a                _ZN4Uart3getEv
 .text._ZN4Uart8has_dataEv
                0x0000000000000178       0x1e ./Uart.o
                0x0000000000000178                _ZN4Uart8has_dataEv
 .text._ZN4Uart20rx_interrupt_handlerEv
                0x0000000000000196       0x1e ./Uart.o
                0x0000000000000196                _ZN4Uart20rx_interrupt_handlerEv
 .text._ZN4Uart23empty_interrupt_handlerEv
                0x00000000000001b4       0x42 ./Uart.o
                0x00000000000001b4                _ZN4Uart23empty_interrupt_handlerEv
 .text.__vector_18
                0x00000000000001f6       0x56 ./Uart.o
                0x00000000000001f6                __vector_18
 .text.__vector_19
                0x000000000000024c       0x56 ./Uart.o
                0x000000000000024c                __vector_19
 .text._ZN4Uart11interruptonEv
                0x00000000000002a2       0x10 ./Uart.o
                0x00000000000002a2                _ZN4Uart11interruptonEv
 .text._ZN15Circular_BufferILi10EEC2Ev
                0x00000000000002b2       0x3a ./Uart.o
                0x00000000000002b2                _ZN15Circular_BufferILi10EEC1Ev
                0x00000000000002b2                _ZN15Circular_BufferILi10EEC2Ev
 .text._ZN15Circular_BufferILi10EED2Ev
                0x00000000000002ec       0x34 ./Uart.o
                0x00000000000002ec                _ZN15Circular_BufferILi10EED1Ev
                0x00000000000002ec                _ZN15Circular_BufferILi10EED2Ev
 .text._ZN15Circular_BufferILi10EED0Ev
                0x0000000000000320       0x24 ./Uart.o
                0x0000000000000320                _ZN15Circular_BufferILi10EED0Ev
 .text._ZN15Circular_BufferILi10EE4pushEh
                0x0000000000000344       0x62 ./Uart.o
                0x0000000000000344                _ZN15Circular_BufferILi10EE4pushEh
 .text._ZN15Circular_BufferILi10EE3popEv
                0x00000000000003a6       0x62 ./Uart.o
                0x00000000000003a6                _ZN15Circular_BufferILi10EE3popEv
 .text._ZN15Circular_BufferILi10EE8has_dataEv
                0x0000000000000408       0x38 ./Uart.o
                0x0000000000000408                _ZN15Circular_BufferILi10EE8has_dataEv
 .text._ZN4UartD2Ev
                0x0000000000000440       0x26 ./Uart.o
                0x0000000000000440                _ZN4UartD1Ev
                0x0000000000000440                _ZN4UartD2Ev
 .text._Z41__static_initialization_and_destruction_0ii
                0x0000000000000466       0x58 ./Uart.o
 .text._GLOBAL__sub_I__ZN4Uart4uartE
                0x00000000000004be       0x18 ./Uart.o
 .text._GLOBAL__sub_D__ZN4Uart4uartE
                0x00000000000004d6       0x18 ./Uart.o
 .text._ZdlPv   0x00000000000004ee       0x1e ./main.o
                0x00000000000004ee                _ZdlPv
 .text.main     0x000000000000050c       0x36 ./main.o
                0x000000000000050c                main
 .text.libgcc   0x0000000000000542        0xc /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                0x0000000000000542                __tablejump2__
                0x0000000000000546                __tablejump__
 .text.avr-libc
                0x000000000000054e      0x24e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x000000000000054e                malloc
                0x000000000000067e                free
                0x000000000000079c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000079c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x000000000000079c                exit
                0x000000000000079c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 .fini6         0x000000000000079c       0x14 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
                0x000000000000079c                __do_global_dtors
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000007b0        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000007b4                _etext = .

.data           0x0000000000800100        0xe carregando endereço 0x00000000000007b4
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 ./Uart.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .data          0x0000000000800100        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800100                __malloc_heap_end
                0x0000000000800102                __malloc_heap_start
                0x0000000000800104                __malloc_margin
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata._ZTV15Circular_BufferILi10EE
                0x0000000000800106        0x8 ./Uart.o
                0x0000000000800106                _ZTV15Circular_BufferILi10EE
 *(.gnu.linkonce.d*)
                0x000000000080010e                . = ALIGN (0x2)
                0x000000000080010e                _edata = .
                0x000000000080010e                PROVIDE (__data_end, .)

.bss            0x000000000080010e       0x24
                0x000000000080010e                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss._ZN4Uart4uartE
                0x000000000080010e       0x20 ./Uart.o
                0x000000000080010e                _ZN4Uart4uartE
 *(COMMON)
 COMMON         0x000000000080012e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                0x000000000080012e                __brkval
                0x0000000000800130                __flp
                0x0000000000800132                PROVIDE (__bss_end, .)
                0x00000000000007b4                __data_load_start = LOADADDR (.data)
                0x00000000000007c2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800132        0x0
                0x0000000000800132                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800132                PROVIDE (__noinit_end, .)
                0x0000000000800132                _end = .
                0x0000000000800132                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1f5c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006cc      0x9fc ./Uart.o
                                        0xa38 (tamanho de relaxar)
 .stab          0x00000000000010c8      0x5b8 ./main.o
                                        0x624 (tamanho de relaxar)
 .stab          0x0000000000001680      0x8dc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                        0x8e8 (tamanho de relaxar)

.stabstr        0x0000000000000000     0x20a8
 *(.stabstr)
 .stabstr       0x0000000000000000     0x20a8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./Uart.o
                                         0x12 (tamanho de relaxar)
 .comment       0x0000000000000000       0x12 ./main.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(uart-werner.elf elf32-avr)
LOAD linker stubs

Tabela de Referência Cruzada

Símbolo                                          Arquivo
Circular_Buffer<10>::Circular_Buffer()            ./Uart.o
Circular_Buffer<10>::Circular_Buffer()            ./Uart.o
Circular_Buffer<10>::has_data()                   ./Uart.o
Circular_Buffer<10>::pop()                        ./Uart.o
Circular_Buffer<10>::push(unsigned char)          ./Uart.o
Circular_Buffer<10>::~Circular_Buffer()           ./Uart.o
Circular_Buffer<10>::~Circular_Buffer()           ./Uart.o
Circular_Buffer<10>::~Circular_Buffer()           ./Uart.o
Uart::Uart()                                      ./Uart.o
Uart::Uart()                                      ./Uart.o
                                                  ./main.o
Uart::empty_interrupt_handler()                   ./Uart.o
Uart::get()                                       ./Uart.o
                                                  ./main.o
Uart::has_data()                                  ./Uart.o
                                                  ./main.o
Uart::interruptoff()                              ./Uart.o
Uart::interrupton()                               ./Uart.o
                                                  ./main.o
Uart::put(unsigned char)                          ./Uart.o
                                                  ./main.o
Uart::rx_interrupt_handler()                      ./Uart.o
Uart::uart                                        ./Uart.o
Uart::~Uart()                                     ./Uart.o
Uart::~Uart()                                     ./Uart.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__brkval                                          /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__ctors_end                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
__ctors_start                                     /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  ./Uart.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  ./Uart.o
__do_global_ctors                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
                                                  ./Uart.o
__do_global_dtors                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
                                                  ./Uart.o
__dtors_end                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
__dtors_start                                     /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
__flp                                             /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__heap_start                                      /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__malloc_heap_end                                 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_heap_start                               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__malloc_margin                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__tablejump2__                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
__tablejump__                                     /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_dtors.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_ctors.o)
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_18                                       ./Uart.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_19                                       ./Uart.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
delay()                                           ./main.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
free                                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
                                                  ./main.o
main                                              ./main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
malloc                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(malloc.o)
operator delete(void*)                            ./main.o
                                                  ./Uart.o
vtable for Circular_Buffer<10>                    ./Uart.o
